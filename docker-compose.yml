services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: coolify-test-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-testuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testpass123}
      POSTGRES_DB: ${POSTGRES_DB:-testdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"  # Commented for Coolify - uncomment for local dev
    expose:
      - "5432"  # Internal port only
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-testuser}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: coolify-test-backend
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://testuser:testpass123@postgres:5432/testdb}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-super-secret-key-change-in-production-min-32-chars}
      JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      ENVIRONMENT: ${ENVIRONMENT:-development}
    # ports:
    #   - "8000:8000"  # Commented for Coolify - uncomment for local dev
    expose:
      - "8000"  # Internal port only
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running migrations...' &&
        alembic upgrade head &&
        echo 'Starting FastAPI server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    container_name: coolify-test-frontend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    # ports:
    #   - "3000:3000"  # Commented for Coolify - uncomment for local dev
    expose:
      - "3000"  # Internal port only
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      # Prevent overwriting node_modules
      - /app/node_modules
      - /app/.next
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
